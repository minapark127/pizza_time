{"version":3,"sources":["assets/noPoster.png","assets/noPoster-sml.png","Components/Header.js","api.js","Routes/Home/useHome.js","Components/Landing.js","Components/Loader.js","Components/Message.js","Routes/Home/index.js","Components/Section.js","Components/View.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/ViewDetail.js","Routes/Detail/useDetail.js","Routes/Detail/index.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","Toggle","a","Ul","ul","SLink","Link","props","current","Menu","div","withRouter","pathname","location","to","role","aria-label","className","onClick","document","querySelectorAll","forEach","menu","classList","toggle","icon","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","input","query","encodeURIComponent","tvApi","trendingApi","useHome","useState","loading","setLoading","trending","setTrending","error","setError","updateHome","data","results","useEffect","Backdrop","bgUrl","Container","Welcome","h2","Title","Buttons","Detail","More","section","Landing","title","isMovie","backdropPath","type","value","loadingAnimation","keyframes","EmojiContainer","Emoji","Loader","Text","span","color","Message","text","Home","isLoading","trend","Helmet","name","media_type","backdrop_path","Grid","Section","children","Poster","figure","Rating","ImgContainer","h3","Year","View","rating","year","imgUrl","require","length","substring","MoviePresenter","nowPlaying","topRated","upcoming","map","movie","key","vote_average","release_date","poster_path","MovieContainer","state","this","setState","React","Component","TVPresenter","onTheAir","popular","tv","first_air_date","TVContainer","Form","form","Input","Button","SearchPresenter","movieResult","tvResult","searchInput","submittedInput","handleSubmit","updateInput","onSubmit","placeholder","onChange","autoFocus","SearchContainer","event","preventDefault","searchByInput","target","Content","img","Info","Genres","Misc","Item","li","Overview","P","p","ViewDetail","original_title","original_name","genres","runtime","episode_run_time","imdb_id","overview","src","alt","genre","index","href","rel","width","useDetail","useLocation","useParams","push","useHistory","result","setResult","includes","updateResult","parsedId","parseInt","isNaN","Div","Tabs","TabHeader","Tab","ContentContainer","Items","tabContents","tab","content","videos","production_companies","production_countries","seasons","cleanedContents","filter","cotent","initial","allTabs","currentIndex","setCurrentIndex","currentItem","changeItem","useTabs","querySelector","add","replace","slice","link","height","company","logo_path","country","countryCode","iso_3166_1","svg","style","season","path","exact","component","Movie","Tv","Search","from","globalStyles","createGlobalStyle","reset","library","faBars","App","Router","GlobalStyles","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e29f477c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.381db2c7.png\";","module.exports = __webpack_public_path__ + \"static/media/noPoster-sml.f6566347.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Header = styled.header`\n  width: 100vw;\n  height: 60px;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 600;\n  text-transform: uppercase;\n  position: sticky;\n  top: -10px;\n  span {\n    font-size: 30px;\n  }\n  box-shadow: 0px 4px 17px -6px rgba(0, 0, 0, 0.3);\n  background-color: rgba(60, 63, 66, 0.5);\n  backdrop-filter: saturate(180%) blur(10px);\n  z-index: 2;\n`;\nconst Toggle = styled.a`\n  position: absolute;\n  top: 15px;\n  right: 20px;\n  cursor: pointer;\n  display: none;\n  :hover {\n    color: rgb(245, 20, 6, 0.8);\n  }\n  svg {\n    font-size: 30px;\n  }\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\nconst Ul = styled.ul`\n  display: flex;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n  .active {\n    display: flex !important;\n  }\n`;\n\nconst SLink = styled(Link)`\n  width: 70px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 2.5px solid transparent;\n  border-bottom: 2.5px solid\n    ${(props) => (props.current ? \"#f51406\" : \"transparent\")};\n  &:hover {\n    border-bottom: 2.5px solid #f51406;\n  }\n  text-shadow: ${(props) =>\n    props.current\n      ? `2.5px 2.5px 10px rgba(128, 128, 128, 1),\n    -3px -3px 10px rgba(128, 128, 128, 1)`\n      : \"none\"};\n  transition: border-bottom 0.35s ease-in, text-shadow 0.35s ease-in;\n`;\n\nconst Menu = styled.div`\n  display: flex;\n  a {\n    width: 100px;\n  }\n  @media (max-width: 768px) {\n    display: none;\n    flex-direction: column;\n    a {\n      width: 30%;\n      align-self: flex-end;\n      box-shadow: 0px 4px 17px -6px rgba(0, 0, 0, 0.3);\n      background-color: rgba(33, 33, 33, 0.85);\n      backdrop-filter: saturate(180%) blur(10px);\n      z-index: 2;\n      height: 70px;\n    }\n    li {\n      width: 100%;\n      height: 100%;\n      text-align: right;\n      padding-right: 10px;\n      padding-top: 20px;\n    }\n  }\n  @media (max-width: 425px) {\n    a {\n      width: 50%;\n    }\n  }\n`;\n\nconst toggleMenu = () => {\n  const menu = document.querySelectorAll(\".menu\");\n  menu.forEach((menu) => menu.classList.toggle(\"active\"));\n};\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <Ul>\n      <SLink to=\"/\" current={pathname === \"/\"}>\n        <li>\n          <span role=\"img\" aria-label=\"pizza emoji\">\n            🍕\n          </span>\n        </li>\n      </SLink>\n      <Menu className=\"menu\">\n        <SLink to=\"/movie\" current={pathname === \"/movie\"}>\n          <li>Movie</li>\n        </SLink>\n        <SLink to=\"/tv\" current={pathname === \"/tv\"}>\n          <li>TV</li>\n        </SLink>\n        <SLink to=\"/search\" current={pathname === \"/search\"}>\n          <li>Search</li>\n        </SLink>\n      </Menu>\n    </Ul>\n    <Toggle className=\"toggleBtn\" onClick={() => toggleMenu()}>\n      <FontAwesomeIcon icon=\"bars\" />\n    </Toggle>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"5cef9d776768b9b6cc625230d88030bb\",\n    language: \"en-US\",\n  },\n});\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  topRated: () => api.get(\"movie/top_rated\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (input) =>\n    api.get(`search/movie`, {\n      params: {\n        query: encodeURIComponent(input),\n      },\n    }),\n};\n\nexport const tvApi = {\n  onTheAir: () => api.get(\"tv/on_the_air\"),\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  tvDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (input) =>\n    api.get(`search/tv`, {\n      params: {\n        query: encodeURIComponent(input),\n      },\n    }),\n};\n\nexport const trendingApi = {\n  trendingAll: () => api.get(\"trending/all/week\"),\n};\n\nexport default api;\n","import { useState, useEffect } from \"react\";\nimport { trendingApi } from \"api\";\n\nfunction useHome() {\n  const [loading, setLoading] = useState(true);\n  const [trending, setTrending] = useState([]);\n  const [error, setError] = useState(null);\n\n  const updateHome = async () => {\n    try {\n      const {\n        data: { results: trending },\n      } = await trendingApi.trendingAll();\n      setTrending(trending);\n    } catch (error) {\n      setError(\"❌cannot find information on trending❌\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    updateHome();\n  }, []);\n  return { loading, trending, error };\n}\n\nexport default useHome;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Backdrop = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center;\n  background-size: cover;\n  opacity: 0.4;\n  z-index: 0;\n`;\nconst Container = styled.div`\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n`;\nconst Welcome = styled.h2`\n  text-align: end;\n  font-size: 50px;\n  span {\n    text-shadow: 2.5px 2.5px 10px rgba(200, 200, 200, 1),\n      -3px -3px 10px rgba(200, 200, 200, 1);\n  }\n  h3 {\n    text-transform: uppercase;\n    font-size: 16px;\n    opacity: 0.9;\n    margin-top: 25px;\n    letter-spacing: 1.2px;\n  }\n`;\nconst Title = styled.h2`\n  line-height: 1.2;\n  font-size: 70px;\n  font-weight: 600;\n  text-align: end;\n  text-transform: capitalize;\n  margin-bottom: 15px;\n  @media (max-width: 768px) {\n    font-size: 35px;\n    line-height: 1.5;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  input {\n    all: unset;\n    margin-left: 20px;\n    border-radius: 10px;\n    padding: 15px 35px;\n    box-shadow: 0px 4px 20px -3px rgba(0, 0, 0, 0.35);\n    transition: transform 0.5s linear;\n    :hover {\n      cursor: pointer;\n      background-color: rgba(245, 20, 6, 0.7);\n    }\n    :active {\n      transform: scale(0.8);\n    }\n  }\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-end;\n  }\n`;\nconst Detail = styled(Link)`\n  margin-bottom: 20px;\n  input {\n    background-color: rgba(245, 20, 6, 0.9);\n    color: #f0e2dc;\n  }\n`;\nconst More = styled.section`\n  input {\n    background-color: rgba(240, 226, 220, 0.95);\n    color: #3c3f42;\n    :hover {\n      background-color: rgba(240, 226, 220, 0.7);\n    }\n  }\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    input {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nconst Landing = ({ title, isMovie, id, backdropPath }) => (\n  <>\n    <Backdrop bgUrl={`https://image.tmdb.org/t/p/original${backdropPath}`} />\n    <Container>\n      <Welcome>\n        <span role=\"img\" aria-label=\"pizza\">\n          🍕\n        </span>\n        <h3>tredning now</h3>\n      </Welcome>\n      <Title>{title}</Title>\n      <Buttons>\n        <Detail to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n          <input type=\"button\" value=\"view detail\" />\n        </Detail>\n        <More>\n          <Link to={`/movie`}>\n            <input type=\"button\" value=\"▶ more Movies\" />\n          </Link>\n          <Link to={`/tv`}>\n            <input type=\"button\" value=\"▶ more TVs\" />\n          </Link>\n        </More>\n      </Buttons>\n    </Container>\n  </>\n);\n\nLanding.propTypes = {\n  title: PropTypes.string.isRequired,\n  isMovie: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  backdropPath: PropTypes.string.isRequired,\n};\nexport default Landing;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst loadingAnimation = keyframes`\n  0%,\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  20% {\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n    transform: scale(0);\n  }\n`;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst EmojiContainer = styled.div`\n  width: 80px;\n  height: 80px;\n  position: relative;\n`;\nconst Emoji = styled.div`\n  font-size: 55px;\n  position: absolute;\n  text-shadow: 2.5px 2.5px 10px rgba(128, 128, 128, 1),\n    -3px -3px 10px rgba(128, 128, 128, 1);\n  :first-child {\n    animation: ${loadingAnimation} 1.6s 0s infinite ease-out;\n  }\n  :nth-child(2) {\n    animation: ${loadingAnimation} 1.6s -0.8s infinite ease-out;\n  }\n`;\n\nconst Loader = () => (\n  <Container>\n    <EmojiContainer>\n      <Emoji>\n        <span role=\"img\" aria-label=\"pizza\">\n          🍕\n        </span>\n      </Emoji>\n      <Emoji>\n        <span role=\"img\" aria-label=\"popcorn\">\n          🍿\n        </span>\n      </Emoji>\n    </EmojiContainer>\n  </Container>\n);\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useHome from \"./useHome\";\nimport Landing from \"../../Components/Landing\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 100px);\n  padding: 30px;\n`;\n\nfunction Home() {\n  const { trending, isLoading, error } = useHome();\n  const trend = trending[0];\n\n  return (\n    <>\n      <Helmet>\n        <title>Pizza Time</title>\n      </Helmet>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {trend && (\n            <>\n              <Landing\n                title={trend.title ? trend.title : trend.name}\n                isMovie={trend.media_type === \"movie\" ? true : false}\n                id={trend.id}\n                backdropPath={trend.backdrop_path}\n              />\n            </>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.section`\n  width: 97vw;\n  margin: 0 auto;\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n  margin-top: 30px;\n  @media (max-width: 768px) {\n    width: 92vw;\n    height: 35vh;\n    display: grid;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  @media (max-width: 768px) {\n    align-self: center;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 150px);\n  grid-gap: 25px 18px;\n  @media (max-width: 768px) {\n    grid-auto-flow: column;\n    overflow: scroll;\n  }\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.section``;\n\nconst Poster = styled.figure`\n  width: 100%;\n  height: 210px;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center;\n  background-size: cover;\n  transition: transform 0.3s linear;\n  @media (max-width: 768px) {\n    width: 150px;\n  }\n`;\nconst Rating = styled.div`\n  letter-spacing: 1.3px;\n  position: absolute;\n  bottom: 10px;\n  right: 5px;\n  font-weight: 600;\n  opacity: 0;\n  transition: opacity 0.3s linear;\n`;\nconst ImgContainer = styled.div`\n  margin-bottom: 5px;\n  &:hover {\n    ${Poster} {\n      opacity: 0.4;\n      transform: scale(1.05);\n    }\n\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n  overflow: hidden;\n  position: relative;\n  box-shadow: 0px 4px 20px -3px rgba(0, 0, 0, 0.3);\n`;\n\nconst Title = styled.h3`\n  font-weight: 600;\n  line-height: 1.2rem;\n`;\nconst Year = styled.span`\n  opacity: 0.8;\n  font-size: 14px;\n`;\n\nconst View = ({ id, rating, year, imgUrl, title, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImgContainer>\n        <Poster\n          bgUrl={\n            imgUrl\n              ? `https://image.tmdb.org/t/p/w300${imgUrl}`\n              : require(\"../assets/noPoster.png\")\n          }\n        />\n\n        <Rating>\n          {rating > 5 ? (\n            <span role=\"img\" aria-label=\"recommend\">\n              😇\n            </span>\n          ) : (\n            <span role=\"img\" aria-label=\"bad\">\n              🤬\n            </span>\n          )}\n          {rating}/10\n        </Rating>\n      </ImgContainer>\n      <Title>\n        {\" \"}\n        {title.length > 14 ? `${title.substring(0, 14)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nView.propTypes = {\n  id: PropTypes.number.isRequired,\n  isMovie: PropTypes.bool.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  img: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default View;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport View from \"Components/View\";\nimport Message from \"../../Components/Message\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.section``;\n\nconst MoviePresenter = ({\n  nowPlaying,\n  topRated,\n  upcoming,\n  isLoading,\n  error,\n}) => (\n  <>\n    <Helmet>\n      <title>Movie | Pizza Time</title>\n    </Helmet>\n    {isLoading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <View\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                imgUrl={movie.poster_path}\n                title={movie.title}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map((movie) => (\n              <View\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                imgUrl={movie.poster_path}\n                title={movie.title}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <View\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                imgUrl={movie.poster_path}\n                title={movie.title}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#f51406\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nMoviePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  topRated: PropTypes.array,\n  upcoming: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default MoviePresenter;\n","import MovieContainer from \"./MovieContainer\";\n\nexport default MovieContainer;\n","import React from \"react\";\nimport MoviePresenter from \"./MoviePresenter\";\nimport { movieApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    topRated: null,\n    upcoming: null,\n    isLoading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: topRated },\n      } = await movieApi.topRated();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n\n      this.setState({\n        nowPlaying,\n        topRated,\n        upcoming,\n      });\n    } catch {\n      this.setState({\n        error: \"❌cannot find movie information❌\",\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, topRated, upcoming, isLoading, error } = this.state;\n    return (\n      <MoviePresenter\n        nowPlaying={nowPlaying}\n        topRated={topRated}\n        upcoming={upcoming}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport View from \"Components/View\";\nimport Message from \"../../Components/Message\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.section``;\n\nconst TVPresenter = ({ onTheAir, topRated, popular, isLoading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | Pizza Time</title>\n    </Helmet>\n    {isLoading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {onTheAir && onTheAir.length > 0 && (\n          <Section title=\"On the Air\">\n            {onTheAir.map((tv) => (\n              <View\n                key={tv.id}\n                id={tv.id}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n                imgUrl={tv.poster_path}\n                title={tv.name}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map((tv) => (\n              <View\n                key={tv.id}\n                id={tv.id}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n                imgUrl={tv.poster_path}\n                title={tv.name}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((tv) => (\n              <View\n                key={tv.id}\n                id={tv.id}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n                imgUrl={tv.poster_path}\n                title={tv.name}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#f51406\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  onTheAir: PropTypes.array,\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    onTheAir: null,\n    topRated: null,\n    popular: null,\n    isLoading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: onTheAir },\n      } = await tvApi.onTheAir();\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      this.setState({\n        onTheAir,\n        topRated,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"❌cannot find tv show information❌\",\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n  render() {\n    const { onTheAir, topRated, popular, isLoading, error } = this.state;\n    return (\n      <TVPresenter\n        onTheAir={onTheAir}\n        topRated={topRated}\n        popular={popular}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport View from \"Components/View\";\nimport Message from \"../../Components/Message\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.section`\n  width: 97vw;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  width: 300px;\n  border-bottom: 1px solid #f0e2dc;\n  padding: 10px;\n  :focus {\n    border-bottom: 1px solid #f51406;\n  }\n`;\n\nconst Button = styled.input`\n  all: unset;\n  margin-left: 20px;\n  background-color: rgba(245, 20, 6, 0.8);\n  color: #f0e2dc;\n  border-radius: 7px;\n  padding: 10px 15px;\n  box-shadow: 0px 4px 20px -3px rgba(0, 0, 0, 0.35);\n  transition: transform 1s linear;\n  :hover {\n    cursor: pointer;\n    background-color: rgba(245, 20, 6, 0.6);\n  }\n  :active {\n    transform: scale(0.8);\n  }\n`;\n\nconst SearchPresenter = ({\n  movieResult,\n  tvResult,\n  searchInput,\n  submittedInput,\n  isLoading,\n  error,\n  handleSubmit,\n  updateInput,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Pizza Time</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"search for movies or tv shows\"\n        value={searchInput}\n        onChange={updateInput}\n        autoFocus\n      />\n      <Button type=\"button\" value=\"Search\" onClick={handleSubmit} />\n    </Form>\n    {isLoading ? (\n      <>\n        <Loader />\n        <Helmet>\n          <title>Searching... | Pizza Time</title>\n        </Helmet>\n      </>\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <>\n            <Helmet>\n              <title>Results on {submittedInput} | Pizza Time</title>\n            </Helmet>\n            <h2>Showing results for \"{submittedInput}\"</h2>\n            <Section title=\"Results on movies\">\n              {movieResult.map((movie) => (\n                <View\n                  key={movie.id}\n                  id={movie.id}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n                  }\n                  imgUrl={movie.poster_path}\n                  title={movie.title}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          </>\n        )}\n        {tvResult && tvResult.length > 0 && (\n          <Section title=\"Results on tv shows\">\n            {tvResult.map((tv) => (\n              <View\n                key={tv.id}\n                id={tv.id}\n                rating={tv.vote_average}\n                year={\n                  tv.first_air_date ? tv.first_air_date.substring(0, 4) : \"\"\n                }\n                imgUrl={tv.poster_path}\n                title={tv.name}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResult &&\n          movieResult &&\n          tvResult.length === 0 &&\n          movieResult.length === 0 && (\n            <Message text=\"Nothing found\" color=\"rgba(240, 226, 220, 0.5)\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: PropTypes.array,\n  tvResult: PropTypes.array,\n  searchInput: PropTypes.string,\n  submittedInput: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateInput: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResult: null,\n    tvResult: null,\n    searchInput: \"\",\n    submittedInput: \"\",\n    isLoading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchInput } = this.state;\n    this.setState({\n      submittedInput: searchInput,\n    });\n    if (searchInput !== \"\") {\n      this.searchByInput();\n    }\n  };\n\n  updateInput = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchInput: value });\n  };\n\n  searchByInput = async () => {\n    const { searchInput } = this.state;\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const {\n        data: { results: movieResult },\n      } = await movieApi.search(searchInput);\n\n      const {\n        data: { results: tvResult },\n      } = await tvApi.search(searchInput);\n\n      this.setState({\n        movieResult,\n        tvResult,\n      });\n    } catch {\n      this.setState({ error: \"❌cannot find results\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResult,\n      tvResult,\n      searchInput,\n      submittedInput,\n      isLoading,\n      error,\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        searchInput={searchInput}\n        submittedInput={submittedInput}\n        isLoading={isLoading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateInput={this.updateInput}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Backdrop = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center;\n  background-size: cover;\n  opacity: 0.3;\n  filter: blur(5px);\n  z-index: 0;\n`;\nconst Content = styled.div`\n  z-index: 1;\n  width: 100%;\n  position: relative;\n  margin-bottom: 20px;\n`;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1.8fr;\n  column-gap: 100px;\n  @media (max-width: 768px) {\n    grid-auto-flow: column;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 0.6fr;\n  }\n`;\nconst Poster = styled.img`\n  justify-self: end;\n  align-self: center;\n  @media (max-width: 768px) {\n    justify-self: center;\n  }\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  @media (max-width: 768px) {\n    margin-top: 20px;\n    align-items: center;\n  }\n`;\nconst Title = styled.h2`\n  font-weight: 600;\n  font-size: 35px;\n  margin-bottom: 15px;\n`;\nconst Genres = styled.ul`\n  display: flex;\n  li {\n    margin-right: 5px;\n  }\n  opacity: 0.8;\n  margin-bottom: 8px;\n  font-size: 0.9rem;\n`;\n\nconst Misc = styled.ul`\n  display: flex;\n  margin-bottom: 30px;\n`;\nconst Item = styled.li`\n  margin-right: 10px;\n`;\nconst Overview = styled.div`\n  margin-bottom: 70px;\n  span {\n    font-size: 0.95rem;\n    text-transform: uppercase;\n  }\n  @media (max-width: 768px) {\n    width: 70%;\n    margin-bottom: 20px;\n  }\n`;\nconst P = styled.p`\n  font-size: 18px;\n  margin-top: 15px;\n  width: 70%;\n  line-height: 1.5rem;\n  @media (max-width: 768px) {\n    width: 100%;\n    margin: 15px auto;\n    height: 120px;\n    overflow: scroll;\n  }\n`;\n\nconst ViewDetail = ({\n  backdropPath,\n  poster_path,\n  original_title,\n  original_name,\n  genres,\n  release_date,\n  first_air_date,\n  runtime,\n  episode_run_time,\n  vote_average,\n  imdb_id,\n  overview,\n}) => (\n  <>\n    <Backdrop bgUrl={`https://image.tmdb.org/t/p/original${backdropPath}`} />\n    <Content>\n      <Grid>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : require(\"assets/noPoster.png\")\n          }\n          alt={`poster for ${original_title ? original_title : original_name}`}\n          title={original_title ? original_title : original_name}\n        />\n        <Info>\n          <Title>{original_title ? original_title : original_name}</Title>\n          <Genres>\n            {genres\n              ? genres.map((genre, index) => (\n                  <li key={index}>\n                    {index === 0 ? genre.name : ` | ${genre.name}`}\n                  </li>\n                ))\n              : null}\n          </Genres>\n          <Misc>\n            <Item>\n              {release_date\n                ? release_date.substring(0, 4)\n                : first_air_date.substring(0, 4)}\n            </Item>\n            <Item>\n              {runtime ? runtime : episode_run_time[0]}\n              &nbsp;min\n            </Item>\n            <Item>\n              {vote_average && vote_average > 5 ? (\n                <span role=\"img\" aria-label=\"good\">\n                  😇\n                </span>\n              ) : (\n                <span role=\"img\" aria-label=\"good\">\n                  🤬\n                </span>\n              )}\n              {vote_average} / 10\n            </Item>\n            <div>\n              {imdb_id ? (\n                <a\n                  href={`https://www.imdb.com/title/${imdb_id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Item>\n                    <img\n                      src=\"https://m.media-amazon.com/images/G/01/IMDb/BG_rectangle._CB1509060989_SY230_SX307_AL_.png\"\n                      width=\"40px\"\n                      alt=\"IMDB logo\"\n                      title=\"find on IMDB\"\n                    />\n                  </Item>\n                </a>\n              ) : null}\n            </div>\n          </Misc>\n          <Overview>\n            <span>Summary</span>\n            <P>{overview}</P>\n          </Overview>\n        </Info>\n      </Grid>\n    </Content>\n  </>\n);\n\nViewDetail.propTypes = {\n  backdropPath: PropTypes.string,\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n  original_name: PropTypes.string,\n  genres: PropTypes.array,\n  release_date: PropTypes.string,\n  first_air_date: PropTypes.string,\n  runtime: PropTypes.number,\n  episode_run_time: PropTypes.array,\n  vote_average: PropTypes.number,\n  imdb_id: PropTypes.string,\n  overview: PropTypes.string,\n};\nexport default ViewDetail;\n","import { useState, useEffect } from \"react\";\nimport { movieApi, tvApi } from \"api\";\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\n\nfunction useDetail() {\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const { push } = useHistory();\n  const [isLoading, setLoading] = useState(true);\n  const [result, setResult] = useState([]);\n  const [error, setError] = useState(null);\n  const [isMovie] = useState(pathname.includes(\"/movie/\"));\n\n  const updateResult = async () => {\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    try {\n      if (isMovie) {\n        const { data: result } = await movieApi.movieDetail(parsedId);\n        setResult(result);\n      } else {\n        const { data: result } = await tvApi.tvDetail(parsedId);\n        setResult(result);\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    updateResult();\n  }, []);\n\n  return { isLoading, result, error };\n}\nexport default useDetail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport ViewDetail from \"../../Components/ViewDetail\";\nimport useDetail from \"./useDetail\";\nimport ReactCountryFlag from \"react-country-flag\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 60px);\n  padding: 30px;\n  /* overflow: hidden; */\n`;\n\nconst Div = styled.section`\n  height: 80%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 3fr 2fr;\n  justify-items: center;\n`;\n\nconst Tabs = styled.section`\n  position: relative;\n  z-index: 1;\n  width: 80%;\n  display: grid;\n  grid-template-rows: 0.5fr 4.5fr;\n  align-items: center;\n  margin-bottom: 30px;\n  @media (max-width: 768px) {\n    width: 95%;\n    height: 40vh;\n    grid-template-rows: 1fr 4fr;\n  }\n`;\nconst TabHeader = styled.div`\n  height: 100%;\n  .current {\n    border-bottom: 2px solid #f51406;\n    text-shadow: 2.5px 2.5px 10px rgba(128, 128, 128, 1),\n      -3px -3px 10px rgba(128, 128, 128, 1);\n    background-color: rgba(33, 33, 33, 0.7);\n  }\n  .notCurrent {\n    border-bottom: 2px solid transparent;\n  }\n  display: grid;\n  grid-template-columns:\n    minmax(min-content, 1fr)\n    minmax(min-content, 1fr)\n    minmax(min-content, 1fr);\n  background-color: rgba(60, 63, 66, 0.8);\n  border-bottom: 2px solid transparent;\n  transition: border-bottom 0.37s ease-in, text-shadow 0.35s ease-in;\n  box-shadow: 0px 4px 17px -6px rgba(0, 0, 0, 0.6);\n`;\nconst Tab = styled.input`\n  all: unset;\n  text-align: center;\n  font-size: 1.2rem;\n  text-transform: capitalize;\n  cursor: pointer;\n  border-bottom: 2px solid transparent;\n  :hover {\n    border-bottom: 2px solid #f51406;\n    background-color: rgba(33, 33, 33, 0.7);\n  }\n  transition: border-bottom 0.37s ease-in;\n  width: 100%;\n  padding: 20px 0;\n  line-height: 1.5rem;\n`;\nconst ContentContainer = styled.div`\n  height: 100%;\n  padding: 5px 20px;\n  background-color: rgba(33, 33, 33, 0.7);\n  box-shadow: 0px 4px 17px -6px rgba(0, 0, 0, 0.6);\n  align-self: center;\n  display: grid;\n  grid-auto-rows: 1fr;\n  align-items: center;\n  overflow: scroll;\n`;\n\nconst Items = styled.div`\n  display: flex;\n`;\nconst Item = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: minmax(1fr, 260px), 15px;\n  margin-right: 30px;\n  iframe,\n  img {\n    margin-bottom: 10px;\n    align-self: end;\n  }\n  span {\n    text-align: center;\n    font-size: 1rem;\n    text-transform: none;\n    letter-spacing: 0.8px;\n    align-self: end;\n  }\n  a {\n    :hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst useTabs = (initial, allTabs) => {\n  const [currentIndex, setCurrentIndex] = useState(initial);\n  return {\n    currentItem: allTabs[currentIndex],\n    changeItem: setCurrentIndex,\n  };\n};\n\nfunction Detail() {\n  const { result, isLoading, error } = useDetail();\n  const tabContents = [\n    { tab: \"featured videos\", content: null },\n    { tab: \"production companies\", content: null },\n    { tab: \"production countries\", content: null },\n    { tab: \"seasons\", content: null },\n  ];\n  if (!isLoading) {\n    result.videos\n      ? (tabContents[0].content = result.videos.results)\n      : (tabContents[0].content = null);\n    result.production_companies\n      ? (tabContents[1].content = result.production_companies)\n      : (tabContents[1].content = null);\n    result.production_countries\n      ? (tabContents[2].content = result.production_countries)\n      : (tabContents[2].content = null);\n    result.seasons\n      ? (tabContents[3].content = result.seasons)\n      : (tabContents[3].content = null);\n  }\n\n  const cleanedContents = tabContents.filter((tab) =>\n    tab.cotent !== null ? tab.content : null\n  );\n  const { currentItem, changeItem } = useTabs(0, cleanedContents);\n\n  if (!isLoading) {\n    const current = document.querySelector(`input[value=\"${currentItem.tab}\"]`);\n    const allTabs = document.querySelectorAll(`input[type=\"button\"]`);\n    if (current !== null) {\n      allTabs.forEach((tab) =>\n        tab !== current\n          ? tab.classList.add(\"notCurrent\") ||\n            tab.classList.replace(\"current\", \"notCurrent\")\n          : tab.classList.add(\"current\") ||\n            tab.classList.replace(\"notCurrent\", \"current\")\n      );\n    }\n  }\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {result && (\n        <>\n          <Helmet>\n            <title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}{\" \"}\n              | Pizza Time\n            </title>\n          </Helmet>\n          <Div>\n            <ViewDetail\n              backdropPath={result.backdrop_path}\n              poster_path={result.poster_path}\n              original_title={result.original_title}\n              original_name={result.original_name}\n              genres={result.genres}\n              release_date={result.release_date}\n              first_air_date={result.first_air_date}\n              runtime={result.runtime}\n              episode_run_time={result.episode_run_time}\n              vote_average={result.vote_average}\n              imdb_id={result.imdb_id}\n              overview={result.overview}\n            ></ViewDetail>\n            <Tabs>\n              <TabHeader>\n                {cleanedContents &&\n                  cleanedContents.map((tab, index) => (\n                    <Tab\n                      key={index}\n                      type=\"button\"\n                      onClick={() => changeItem(index)}\n                      value={tab.tab}\n                      className={index === 0 ? \"current\" : null}\n                    ></Tab>\n                  ))}\n              </TabHeader>\n              <ContentContainer>\n                {currentItem.tab === \"featured videos\" && (\n                  <Items>\n                    {currentItem.content\n                      ? currentItem.content.slice(0, 3).map((link, index) => (\n                          <Item key={index}>\n                            <iframe\n                              src={`https://www.youtube.com/embed/${link.key}`}\n                              width=\"260px\"\n                              height=\"180px\"\n                              title={link.name}\n                            />\n                            <a\n                              href={`https://www.youtube.com/watch?v=${link.key}`}\n                            >\n                              <span>\n                                {link.name.length > 20\n                                  ? `${link.name.substring(0, 23)} ...`\n                                  : link.name}\n                              </span>\n                            </a>\n                          </Item>\n                        ))\n                      : null}\n                  </Items>\n                )}\n                {currentItem.tab === \"production companies\" && (\n                  <Items>\n                    {currentItem.content\n                      ? currentItem.content\n                          .slice(0, 3)\n                          .map((company, index) => (\n                            <Item key={index}>\n                              <img\n                                src={\n                                  company.logo_path\n                                    ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\n                                    : require(\"assets/noPoster-sml.png\")\n                                }\n                                alt={company.name}\n                                title={company.name}\n                              />\n\n                              <span>{company.name}</span>\n                            </Item>\n                          ))\n                      : null}\n                  </Items>\n                )}\n                {currentItem.tab === \"production countries\" && (\n                  <Items>\n                    {currentItem.content\n                      ? currentItem.content\n                          .slice(0, 3)\n                          .map((country, index) => (\n                            <Item key={index}>\n                              <ReactCountryFlag\n                                countryCode={country.iso_3166_1}\n                                svg\n                                style={{\n                                  width: \"260px\",\n                                  height: \"140px\",\n                                }}\n                                title={country.iso_3166_1}\n                              />\n                              <span>{country.name}</span>\n                            </Item>\n                          ))\n                      : null}\n                  </Items>\n                )}\n                {currentItem.tab === \"seasons\" && (\n                  <Items>\n                    {currentItem.content\n                      ? currentItem.content.map((season, index) => (\n                          <Item key={index}>\n                            <img\n                              src={`https://image.tmdb.org/t/p/w300${season.poster_path}`}\n                              height=\"180px\"\n                              alt={season.name}\n                              title={season.name}\n                            />\n                            <span>{season.name}</span>\n                          </Item>\n                        ))\n                      : null}\n                  </Items>\n                )}\n              </ContentContainer>\n            </Tabs>\n          </Div>\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Detail;\n","import React from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport Movie from \"Routes/Movie\";\nimport Tv from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <HashRouter>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/movie\" exact component={Movie} />\n        <Route path=\"/tv\" exact component={Tv} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </HashRouter>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration: none;\n    color: inherit;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-family: 'Raleway', sans-serif;\n    font-size: 16px;\n    background-color: #3C3F42;\n    color: #f0E2dc;\n  }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faBars);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n      <GlobalStyles />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}